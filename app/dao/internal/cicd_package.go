// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// CicdPackageDao is the manager for logic model data accessing and custom defined data operations functions management.
type CicdPackageDao struct {
	gmvc.M                    // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      cicdPackageColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB             // DB is the raw underlying database management object.
	Table  string             // Table is the underlying table name of the DAO.
}

// CicdPackageColumns defines and stores column names for table cicd_package.
type cicdPackageColumns struct {
	Id          string //
	PipelineId  string //
	JobId       string //
	JobStatus   string //
	PackageName string //
	CreatedAt   string //
}

// NewCicdPackageDao creates and returns a new DAO object for table data access.
func NewCicdPackageDao() *CicdPackageDao {
	columns := cicdPackageColumns{
		Id:          "id",
		PipelineId:  "pipeline_id",
		JobId:       "job_id",
		JobStatus:   "job_status",
		PackageName: "package_name",
		CreatedAt:   "created_at",
	}
	return &CicdPackageDao{
		C:     columns,
		M:     g.DB("default").Model("cicd_package").Safe(),
		DB:    g.DB("default"),
		Table: "cicd_package",
	}
}
