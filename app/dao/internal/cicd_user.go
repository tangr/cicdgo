// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// CicdUserDao is the manager for logic model data accessing and custom defined data operations functions management.
type CicdUserDao struct {
	gmvc.M                 // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      cicdUserColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB          // DB is the raw underlying database management object.
	Table  string          // Table is the underlying table name of the DAO.
}

// CicdUserColumns defines and stores column names for table cicd_user.
type cicdUserColumns struct {
	Id        string //
	Email     string //
	Password  string //
	GroupId   string //
	UpdatedAt string //
}

// NewCicdUserDao creates and returns a new DAO object for table data access.
func NewCicdUserDao() *CicdUserDao {
	columns := cicdUserColumns{
		Id:        "id",
		Email:     "email",
		Password:  "password",
		GroupId:   "group_id",
		UpdatedAt: "updated_at",
	}
	return &CicdUserDao{
		C:     columns,
		M:     g.DB("default").Model("cicd_user").Safe(),
		DB:    g.DB("default"),
		Table: "cicd_user",
	}
}
